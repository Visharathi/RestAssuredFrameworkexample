<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="2" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-26T23:54:58 GMT" name="Practice Suite for Rest Assured Framework" finished-at="2022-12-26T23:55:02 GMT" duration-ms="3852">
    <groups>
    </groups>
    <test started-at="2022-12-26T23:54:58 GMT" name="Testing all TCs" finished-at="2022-12-26T23:55:02 GMT" duration-ms="3852">
      <class name="GetRequestTest.ValidateGetRequestTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:GetRequestTest.ValidateGetRequestTest@723ca036]" started-at="2022-12-26T23:54:58 GMT" name="setUp" finished-at="2022-12-26T23:54:58 GMT" duration-ms="30" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getRequestPathParamTest()[pri:0, instance:GetRequestTest.ValidateGetRequestTest@723ca036]" started-at="2022-12-26T23:54:58 GMT" name="getRequestPathParamTest" finished-at="2022-12-26T23:55:02 GMT" duration-ms="3206" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [fuchsia rose] but found [null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [fuchsia rose] but found [null]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:643)
at GetRequestTest.ValidateGetRequestTest.getRequestPathParamTest(ValidateGetRequestTest.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestPathParamTest -->
        <test-method is-config="true" signature="EndTestCase()[pri:0, instance:GetRequestTest.ValidateGetRequestTest@723ca036]" started-at="2022-12-26T23:55:02 GMT" name="EndTestCase" finished-at="2022-12-26T23:55:02 GMT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTestCase -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:GetRequestTest.ValidateGetRequestTest@723ca036]" started-at="2022-12-26T23:55:02 GMT" name="setUp" finished-at="2022-12-26T23:55:02 GMT" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getRequestQueryParamTest()[pri:0, instance:GetRequestTest.ValidateGetRequestTest@723ca036]" started-at="2022-12-26T23:55:02 GMT" name="getRequestQueryParamTest" finished-at="2022-12-26T23:55:02 GMT" duration-ms="205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestQueryParamTest -->
        <test-method is-config="true" signature="EndTestCase()[pri:0, instance:GetRequestTest.ValidateGetRequestTest@723ca036]" started-at="2022-12-26T23:55:02 GMT" name="EndTestCase" finished-at="2022-12-26T23:55:02 GMT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTestCase -->
      </class> <!-- GetRequestTest.ValidateGetRequestTest -->
      <class name="PostResquestTest.ValidationPostRequestTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:PostResquestTest.ValidationPostRequestTest@5c7933ad]" started-at="2022-12-26T23:55:02 GMT" name="setUp" finished-at="2022-12-26T23:55:02 GMT" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="PostRequestTest()[pri:0, instance:PostResquestTest.ValidationPostRequestTest@5c7933ad]" started-at="2022-12-26T23:55:02 GMT" name="PostRequestTest" finished-at="2022-12-26T23:55:02 GMT" duration-ms="293" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PostRequestTest -->
        <test-method is-config="true" signature="EndTestCase()[pri:0, instance:PostResquestTest.ValidationPostRequestTest@5c7933ad]" started-at="2022-12-26T23:55:02 GMT" name="EndTestCase" finished-at="2022-12-26T23:55:02 GMT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTestCase -->
      </class> <!-- PostResquestTest.ValidationPostRequestTest -->
    </test> <!-- Testing all TCs -->
  </suite> <!-- Practice Suite for Rest Assured Framework -->
</testng-results>
